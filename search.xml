<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git</title>
    <url>/2022/08/02/Git/</url>
    <content><![CDATA[<blockquote>
<p>git的一些基础操作</p>
</blockquote>
<span id="more"></span>

<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>版本控制工具</p>
<p>镜像下载地址：<a href="http://npm.taobao.org/mirrors/git-for-windows/">http://npm.taobao.org/mirrors/git-for-windows/</a></p>
<p>平时一定要多使用这些基础的命令！</p>
<ul>
<li><p>cd : 改变目录。</p>
</li>
<li><p>cd . . 回退到上一个目录，直接cd进入默认目录</p>
</li>
<li><p>pwd : 显示当前所在的目录路径。</p>
</li>
<li><p>ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p>
</li>
<li><p>touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p>
</li>
<li><p>rm:  删除一个文件, rm index.js 就会把index.js文件删除。</p>
</li>
<li><p>mkdir:  新建一个目录,就是新建一个文件夹。</p>
</li>
<li><p>rm -r :  删除一个文件夹, rm -r src 删除src目录</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！</span><br></pre></td></tr></table></figure>

<ul>
<li><p>mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。</p>
</li>
<li><p>reset 重新初始化终端&#x2F;清屏。</p>
</li>
<li><p>clear 清屏。</p>
</li>
<li><p>history 查看命令历史。</p>
</li>
<li><p>help 帮助。</p>
</li>
<li><p>exit 退出。</p>
</li>
<li><p>#表示注释</p>
</li>
</ul>
<h2 id="git实操"><a href="#git实操" class="headerlink" title="git实操"></a>git实操</h2><ol>
<li>在项目文件夹clone git 仓库</li>
<li>git add . 将所有文件添加到暂存区</li>
<li>git commit -m “修改的一些信息”</li>
<li>git push 提交到远程仓库</li>
</ol>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next优化</title>
    <url>/2022/08/03/hexo-next%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo next</tag>
      </tags>
  </entry>
  <entry>
    <title>函数防抖和节流</title>
    <url>/2022/08/05/%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/</url>
    <content><![CDATA[<blockquote>
<p>函数防抖和节流： 节约计算机资源，提升用户体验。</p>
</blockquote>
<span id="more"></span>

<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>模拟在输入框输入后做ajax查询请求，没有加入防抖和节流的效果，这里附上完整可执行代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>节流和防抖<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 模拟ajax请求</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">content</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ajax request &#x27;</span> + content)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> inputNormal = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;normal&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            inputNormal.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">ajax</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        1.没有防抖的输入：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;normal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：在输入框里输入一个，就会触发一次‘ajax请求’。（这里是console）</p>
<p><img src="/../images/nofdjl.png"></p>
<p>没有防抖和节流</p>
<p>缺点：浪费请求资源。用户输入‘防抖’两个字，就执行了8次‘ajax请求’，而用户只需要最后一次请求。</p>
<h2 id="防抖（debounce）"><a href="#防抖（debounce）" class="headerlink" title="防抖（debounce）"></a>防抖（debounce）</h2><h3 id="1-1-什么是防抖"><a href="#1-1-什么是防抖" class="headerlink" title="1.1 什么是防抖"></a>1.1 什么是防抖</h3><p>在事件被触发n秒后再执行回调函数，如果在这n秒内又被触发，则重新计时。</p>
<h3 id="1-2-应用场景"><a href="#1-2-应用场景" class="headerlink" title="1.2 应用场景"></a>1.2 应用场景</h3><p>(1) 用户在输入框中连续输入一串字符后，只会在输入完后去执行最后一次的查询ajax请求，这样可以有效减少请求次数，节约请求资源；</p>
<p>(2) window的resize、scroll事件，不断地调整浏览器的窗口大小、或者滚动时会触发对应事件，防抖让其只触发一次；</p>
<h3 id="1-3-实现"><a href="#1-3-实现" class="headerlink" title="1.3 实现"></a>1.3 实现</h3><p>加入防抖优化</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>节流和防抖<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 模拟ajax请求</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">content</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ajax request &#x27;</span> + content)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防抖</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn,delay</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> timer = <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> args = <span class="variable language_">arguments</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearTimeout</span>(timer)</span></span><br><span class="line"><span class="language-javascript">                    timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                        fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>,args);</span></span><br><span class="line"><span class="language-javascript">                    &#125;,delay);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> inputNormal = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;normal&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> debounceAjax = <span class="title function_">debounce</span>(ajax, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">            inputNormal.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">debounceAjax</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        2.加入防抖后的输入：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;normal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ol>
<li>每一次事件被触发，都会清除当前的timer然后重新计时。这就会导致高频事件都会取消前一次的超时调用，导致事件处理程序不能被触发；</li>
<li>只有当高频事件停止，最后一次事件触发的超时调用才能在delay时间后执行；</li>
</ol>
<p>效果：</p>
<p>加入防抖后，当持续在输入框里输入时，并不会发送请求，只有当在指定时间间隔内没有再输入时，才会发送请求。如果先停止输入，但是在指定间隔内又输入，会重新触发计时。</p>
<p><img src="/../images/fd.png"></p>
<p>加入防抖后，只发送了一次请求。</p>
<h2 id="2-节流（throttle）"><a href="#2-节流（throttle）" class="headerlink" title="2.节流（throttle）"></a>2.节流（throttle）</h2><h3 id="2-1-什么是节流"><a href="#2-1-什么是节流" class="headerlink" title="2.1 什么是节流"></a>2.1 什么是节流</h3><p>规定一个单位时间，在这个单位时间内，只能有一次触发事件的回调函数执行，如果在同一个单位时间内某事件被多次触发，只有一次能生效。</p>
<h3 id="2-2-应用场景"><a href="#2-2-应用场景" class="headerlink" title="2.2 应用场景"></a>2.2 应用场景</h3><p>(1)鼠标连续不断地触发某事件（如点击），只在单位时间内只触发一次；</p>
<p>(2)在页面的无限加载场景下，需要用户在滚动页面时，每隔一段时间发一次 ajax 请求，而不是在用户停下滚动页面操作时才去请求数据；</p>
<p>(3)监听滚动事件，比如是否滑到底部自动加载更多，用throttle来判断；</p>
<h2 id="2-3-实现"><a href="#2-3-实现" class="headerlink" title="2.3  实现"></a>2.3  实现</h2><p>通过定时器设置单位时间，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>节流和防抖<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//模拟ajax请求</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">content</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ajax request &#x27;</span> + content)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, delay</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> last, deferTimer</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> _args = <span class="variable language_">arguments</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> now = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (last &amp;&amp; now &lt; last + delay) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="built_in">clearTimeout</span>(deferTimer);</span></span><br><span class="line"><span class="language-javascript">                        deferTimer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                            last = now;</span></span><br><span class="line"><span class="language-javascript">                            fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, _args);</span></span><br><span class="line"><span class="language-javascript">                        &#125;, delay)</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        last = now;</span></span><br><span class="line"><span class="language-javascript">                        fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, _args);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> throttleAjax = <span class="title function_">throttle</span>(ajax, <span class="number">3000</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> inputNormal = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;normal&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            inputNormal.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">throttleAjax</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        3.加入节流后的输入：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;normal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：实验可发现在持续输入时，会按照代码中的设定，每2秒执行一次’ajax请求‘</p>
<p><img src="/../images/jl.png"></p>
<h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3 总结"></a>3 总结</h2><p>总结下防抖和节流的区别：</p>
<p>– 效果：</p>
<p>函数防抖是某一段时间内只执行一次；而函数节流是间隔时间执行，不管事件触发有多频繁，都会保证在规定时间内一定会执行一次真正的事件处理函数。</p>
<p>– 原理：</p>
<p>防抖是维护一个计时器，规定在delay时间后触发函数，但是在delay时间内再次触发的话，都会清除当前的 timer 然后重新设置超时调用，即重新计时。这样一来，只有最后一次操作能被触发。</p>
<p>节流是通过判断是否到达一定时间来触发函数，若没到规定时间则使用计时器延后，而下一次事件则会重新设定计时器。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
